/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr.algebra.view;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Image;
import hr.algebra.parsers.rss.ArticleParser;
import hr.algebra.utilities.MessageUtils;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author bubif
 */
public class UploadImagesPanel extends javax.swing.JPanel {

    /**
     * Creates new form UploadFilmsPanel
     */
    public UploadImagesPanel() {
        initComponents();
        try {
            init();
        } catch (Exception e) {
            e.printStackTrace();
            MessageUtils.showErrorMessage("Unrecoverable", "Exiting");
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lsArticles = new javax.swing.JList<>();
        btnUpload = new javax.swing.JButton();

        jScrollPane1.setViewportView(lsArticles);

        btnUpload.setText("Upload NASA images");
        btnUpload.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                btnUploadComponentShown(evt);
            }
        });
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(497, 497, 497)
                .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(500, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private Repository repository;
    private DefaultListModel<Image> model;
    
    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        try {
            List<Image> images = ArticleParser.parse();
            repository.createImages(images);
            loadModel();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnUploadComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_btnUploadComponentShown
        try {
            init();
        } catch (Exception e) {
            e.printStackTrace();
            MessageUtils.showErrorMessage("Unrecoverable", "Exiting");
            System.exit(1);
        }
    }//GEN-LAST:event_btnUploadComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpload;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<hr.algebra.model.Image> lsArticles;
    // End of variables declaration//GEN-END:variables

    private void init() throws Exception {
        repository = RepositoryFactory.getRepository();
        model = new DefaultListModel<>();
        loadModel();
    }

    private void loadModel() throws Exception {
        List<Image> images = repository.selectImages();
        images.forEach(model::addElement);
        lsArticles.setModel(model);
    }
}
